{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\team-4\\\\node_modules\\\\react-native-chart-kit\\\\src\\\\line-chart\\\\line-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, Circle, Polygon, Polyline, Path, Rect, G } from \"react-native-svg\";\nimport AbstractChart from \"../abstract-chart\";\nimport { LegendItem } from \"./legend-item\";\n\nvar LineChart = function (_AbstractChart) {\n  _inherits(LineChart, _AbstractChart);\n\n  function LineChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LineChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getColor = function (dataset, opacity) {\n      return (dataset.color || _this.props.chartConfig.color)(opacity);\n    };\n\n    _this.getStrokeWidth = function (dataset) {\n      return dataset.strokeWidth || _this.props.chartConfig.strokeWidth || 3;\n    };\n\n    _this.getDatas = function (data) {\n      return data.reduce(function (acc, item) {\n        return item.data ? [].concat(_toConsumableArray(acc), _toConsumableArray(item.data)) : acc;\n      }, []);\n    };\n\n    _this.getPropsForDots = function (x, i) {\n      var _this$props = _this.props,\n          getDotProps = _this$props.getDotProps,\n          _this$props$chartConf = _this$props.chartConfig,\n          chartConfig = _this$props$chartConf === void 0 ? {} : _this$props$chartConf;\n\n      if (typeof getDotProps === \"function\") {\n        return getDotProps(x, i);\n      }\n\n      var _chartConfig$propsFor = chartConfig.propsForDots,\n          propsForDots = _chartConfig$propsFor === void 0 ? {} : _chartConfig$propsFor;\n      return _objectSpread({\n        r: \"4\"\n      }, propsForDots);\n    };\n\n    _this.renderDots = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          onDataPointClick = config.onDataPointClick;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var _this$props2 = _this.props,\n          getDotColor = _this$props2.getDotColor,\n          _this$props2$hidePoin = _this$props2.hidePointsAtIndex,\n          hidePointsAtIndex = _this$props2$hidePoin === void 0 ? [] : _this$props2$hidePoin,\n          _this$props2$renderDo = _this$props2.renderDotContent,\n          renderDotContent = _this$props2$renderDo === void 0 ? function () {\n        return null;\n      } : _this$props2$renderDo;\n      data.forEach(function (dataset) {\n        if (dataset.withDots == false) return;\n        dataset.data.forEach(function (x, i) {\n          if (hidePointsAtIndex.includes(i)) {\n            return;\n          }\n\n          var cx = paddingRight + i * (width - paddingRight) / dataset.data.length;\n          var cy = (baseHeight - _this.calcHeight(x, datas, height)) / 4 * 3 + paddingTop;\n\n          var onPress = function onPress() {\n            if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\n              return;\n            }\n\n            onDataPointClick({\n              index: i,\n              value: x,\n              dataset: dataset,\n              x: cx,\n              y: cy,\n              getColor: function getColor(opacity) {\n                return _this.getColor(dataset, opacity);\n              }\n            });\n          };\n\n          output.push(React.createElement(Circle, _extends({\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            fill: typeof getDotColor === \"function\" ? getDotColor(x, i) : _this.getColor(dataset, 0.9),\n            onPress: onPress\n          }, _this.getPropsForDots(x, i), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            }\n          })), React.createElement(Circle, {\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            r: \"14\",\n            fill: \"#fff\",\n            fillOpacity: 0,\n            onPress: onPress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            }\n          }), renderDotContent({\n            x: cx,\n            y: cy,\n            index: i\n          }));\n        });\n      });\n      return output;\n    };\n\n    _this.renderShadow = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierShadow(config);\n      }\n\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop;\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      return config.data.map(function (dataset, index) {\n        return React.createElement(Polygon, {\n          key: index,\n          points: dataset.data.map(function (d, i) {\n            var x = paddingRight + i * (width - paddingRight) / dataset.data.length;\n            var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n            return x + \",\" + y;\n          }).join(\" \") + (\" \" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" \" + paddingRight + \",\" + (height / 4 * 3 + paddingTop)),\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          }\n        });\n      });\n    };\n\n    _this.renderLine = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierLine(config);\n      }\n\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      data.forEach(function (dataset, index) {\n        var points = dataset.data.map(function (d, i) {\n          var x = i * (width - paddingRight) / dataset.data.length + paddingRight;\n          var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n          return x + \",\" + y;\n        });\n        output.push(React.createElement(Polyline, {\n          key: index,\n          points: points.join(\" \"),\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          }\n        }));\n      });\n      return output;\n    };\n\n    _this.getBezierLinePoints = function (dataset, config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n\n      if (dataset.data.length === 0) {\n        return \"M0,0\";\n      }\n\n      var datas = _this.getDatas(data);\n\n      var x = function x(i) {\n        return Math.floor(paddingRight + i * (width - paddingRight) / dataset.data.length);\n      };\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var y = function y(i) {\n        var yHeight = _this.calcHeight(dataset.data[i], datas, height);\n\n        return Math.floor((baseHeight - yHeight) / 4 * 3 + paddingTop);\n      };\n\n      return [\"M\" + x(0) + \",\" + y(0)].concat(dataset.data.slice(0, -1).map(function (_, i) {\n        var x_mid = (x(i) + x(i + 1)) / 2;\n        var y_mid = (y(i) + y(i + 1)) / 2;\n        var cp_x1 = (x_mid + x(i)) / 2;\n        var cp_x2 = (x_mid + x(i + 1)) / 2;\n        return \"Q \" + cp_x1 + \", \" + y(i) + \", \" + x_mid + \", \" + y_mid + (\" Q \" + cp_x2 + \", \" + y(i + 1) + \", \" + x(i + 1) + \", \" + y(i + 1));\n      })).join(\" \");\n    };\n\n    _this.renderBezierLine = function (config) {\n      return config.data.map(function (dataset, index) {\n        var result = _this.getBezierLinePoints(dataset, config);\n\n        return React.createElement(Path, {\n          key: index,\n          d: result,\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        });\n      });\n    };\n\n    _this.renderBezierShadow = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n      return data.map(function (dataset, index) {\n        var d = _this.getBezierLinePoints(dataset, config) + (\" L\" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" L\" + paddingRight + \",\" + (height / 4 * 3 + paddingTop) + \" Z\");\n        return React.createElement(Path, {\n          key: index,\n          d: d,\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          }\n        });\n      });\n    };\n\n    _this.renderLegend = function (width, legendOffset) {\n      var _this$props$data = _this.props.data,\n          legend = _this$props$data.legend,\n          datasets = _this$props$data.datasets;\n      var baseLegendItemX = width / (legend.length + 1);\n      return legend.map(function (legendItem, i) {\n        return React.createElement(G, {\n          key: Math.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, React.createElement(LegendItem, {\n          index: i,\n          iconColor: _this.getColor(datasets[i], 0.9),\n          baseLegendItemX: baseLegendItemX,\n          legendText: legendItem,\n          labelProps: _objectSpread({}, _this.getPropsForLabels()),\n          legendOffset: legendOffset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          }\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          data = _this$props3.data,\n          _this$props3$withShad = _this$props3.withShadow,\n          withShadow = _this$props3$withShad === void 0 ? true : _this$props3$withShad,\n          _this$props3$withDots = _this$props3.withDots,\n          withDots = _this$props3$withDots === void 0 ? true : _this$props3$withDots,\n          _this$props3$withInne = _this$props3.withInnerLines,\n          withInnerLines = _this$props3$withInne === void 0 ? true : _this$props3$withInne,\n          _this$props3$withOute = _this$props3.withOuterLines,\n          withOuterLines = _this$props3$withOute === void 0 ? true : _this$props3$withOute,\n          _this$props3$withHori = _this$props3.withHorizontalLabels,\n          withHorizontalLabels = _this$props3$withHori === void 0 ? true : _this$props3$withHori,\n          _this$props3$withVert = _this$props3.withVerticalLabels,\n          withVerticalLabels = _this$props3$withVert === void 0 ? true : _this$props3$withVert,\n          _this$props3$style = _this$props3.style,\n          style = _this$props3$style === void 0 ? {} : _this$props3$style,\n          decorator = _this$props3.decorator,\n          onDataPointClick = _this$props3.onDataPointClick,\n          _this$props3$vertical = _this$props3.verticalLabelRotation,\n          verticalLabelRotation = _this$props3$vertical === void 0 ? 0 : _this$props3$vertical,\n          _this$props3$horizont = _this$props3.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props3$horizont === void 0 ? 0 : _this$props3$horizont,\n          _this$props3$formatYL = _this$props3.formatYLabel,\n          formatYLabel = _this$props3$formatYL === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _this$props3$formatYL,\n          _this$props3$formatXL = _this$props3.formatXLabel,\n          formatXLabel = _this$props3$formatXL === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _this$props3$formatXL,\n          segments = _this$props3.segments;\n      var _data$labels = data.labels,\n          labels = _data$labels === void 0 ? [] : _data$labels;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight,\n          _style$margin = style.margin,\n          margin = _style$margin === void 0 ? 0 : _style$margin,\n          _style$marginRight = style.marginRight,\n          marginRight = _style$marginRight === void 0 ? 0 : _style$marginRight,\n          _style$paddingBottom = style.paddingBottom,\n          paddingBottom = _style$paddingBottom === void 0 ? 0 : _style$paddingBottom;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation\n      };\n      var datas = this.getDatas(data.datasets);\n      var count = Math.min.apply(Math, _toConsumableArray(datas)) === Math.max.apply(Math, _toConsumableArray(datas)) ? 1 : 4;\n\n      if (segments) {\n        count = segments;\n      }\n\n      var legendOffset = this.props.data.legend ? height * 0.15 : 0;\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        }\n      }, React.createElement(Svg, {\n        height: height + paddingBottom + legendOffset,\n        width: width - margin * 2 - marginRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        }\n      }, React.createElement(Rect, {\n        width: \"100%\",\n        height: height + legendOffset,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        }\n      }), this.props.data.legend && this.renderLegend(config.width, legendOffset), React.createElement(G, {\n        x: \"0\",\n        y: legendOffset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        }\n      }, this.renderDefs(_objectSpread({}, config, {}, this.props.chartConfig)), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread({}, config, {\n        count: count,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderHorizontalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread({}, config, {\n        count: count,\n        data: datas,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        formatYLabel: formatYLabel,\n        decimalPlaces: this.props.chartConfig.decimalPlaces\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        }\n      }, withInnerLines ? this.renderVerticalLines(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderVerticalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread({}, config, {\n        labels: labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        formatXLabel: formatXLabel\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        }\n      }, this.renderLine(_objectSpread({}, config, {\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        data: data.datasets\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        }\n      }, withShadow && this.renderShadow(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        }\n      }, withDots && this.renderDots(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        onDataPointClick: onDataPointClick\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        }\n      }, decorator && decorator(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))))));\n    }\n  }]);\n\n  return LineChart;\n}(AbstractChart);\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/User/Desktop/team-4/node_modules/react-native-chart-kit/src/line-chart/line-chart.js"],"names":["React","Svg","Circle","Polygon","Polyline","Path","Rect","G","AbstractChart","LegendItem","LineChart","getColor","dataset","opacity","color","props","chartConfig","getStrokeWidth","strokeWidth","getDatas","data","reduce","acc","item","getPropsForDots","x","i","getDotProps","propsForDots","r","renderDots","config","width","height","paddingTop","paddingRight","onDataPointClick","output","datas","baseHeight","calcBaseHeight","getDotColor","hidePointsAtIndex","renderDotContent","forEach","withDots","includes","cx","length","cy","calcHeight","onPress","index","value","y","push","Math","random","renderShadow","bezier","renderBezierShadow","map","d","join","renderLine","renderBezierLine","points","getBezierLinePoints","floor","yHeight","concat","slice","_","x_mid","y_mid","cp_x1","cp_x2","result","renderLegend","legendOffset","legend","datasets","baseLegendItemX","legendItem","getPropsForLabels","withShadow","withInnerLines","withOuterLines","withHorizontalLabels","withVerticalLabels","style","decorator","verticalLabelRotation","horizontalLabelRotation","formatYLabel","yLabel","formatXLabel","xLabel","segments","labels","borderRadius","margin","marginRight","paddingBottom","count","min","max","renderDefs","renderHorizontalLines","renderHorizontalLine","renderHorizontalLabels","decimalPlaces","renderVerticalLines","renderVerticalLine","renderVerticalLabels"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  Svg,\r\n  Circle,\r\n  Polygon,\r\n  Polyline,\r\n  Path,\r\n  Rect,\r\n  G\r\n} from \"react-native-svg\";\r\nimport AbstractChart from \"../abstract-chart\";\r\nimport { LegendItem } from \"./legend-item\";\r\n\r\nclass LineChart extends AbstractChart {\r\n  getColor = (dataset, opacity) => {\r\n    return (dataset.color || this.props.chartConfig.color)(opacity);\r\n  };\r\n\r\n  getStrokeWidth = dataset => {\r\n    return dataset.strokeWidth || this.props.chartConfig.strokeWidth || 3;\r\n  };\r\n\r\n  getDatas = data =>\r\n    data.reduce((acc, item) => (item.data ? [...acc, ...item.data] : acc), []);\r\n\r\n  getPropsForDots = (x, i) => {\r\n    const { getDotProps, chartConfig = {} } = this.props;\r\n    if (typeof getDotProps === \"function\") {\r\n      return getDotProps(x, i);\r\n    }\r\n    const { propsForDots = {} } = chartConfig;\r\n    return { r: \"4\", ...propsForDots };\r\n  };\r\n  renderDots = config => {\r\n    const {\r\n      data,\r\n      width,\r\n      height,\r\n      paddingTop,\r\n      paddingRight,\r\n      onDataPointClick\r\n    } = config;\r\n    const output = [];\r\n    const datas = this.getDatas(data);\r\n    const baseHeight = this.calcBaseHeight(datas, height);\r\n    const {\r\n      getDotColor,\r\n      hidePointsAtIndex = [],\r\n      renderDotContent = () => {\r\n        return null;\r\n      }\r\n    } = this.props;\r\n\r\n    data.forEach(dataset => {\r\n      if (dataset.withDots == false) return;\r\n\r\n      dataset.data.forEach((x, i) => {\r\n        if (hidePointsAtIndex.includes(i)) {\r\n          return;\r\n        }\r\n        const cx =\r\n          paddingRight + (i * (width - paddingRight)) / dataset.data.length;\r\n        const cy =\r\n          ((baseHeight - this.calcHeight(x, datas, height)) / 4) * 3 +\r\n          paddingTop;\r\n        const onPress = () => {\r\n          if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\r\n            return;\r\n          }\r\n\r\n          onDataPointClick({\r\n            index: i,\r\n            value: x,\r\n            dataset,\r\n            x: cx,\r\n            y: cy,\r\n            getColor: opacity => this.getColor(dataset, opacity)\r\n          });\r\n        };\r\n        output.push(\r\n          <Circle\r\n            key={Math.random()}\r\n            cx={cx}\r\n            cy={cy}\r\n            fill={\r\n              typeof getDotColor === \"function\"\r\n                ? getDotColor(x, i)\r\n                : this.getColor(dataset, 0.9)\r\n            }\r\n            onPress={onPress}\r\n            {...this.getPropsForDots(x, i)}\r\n          />,\r\n          <Circle\r\n            key={Math.random()}\r\n            cx={cx}\r\n            cy={cy}\r\n            r=\"14\"\r\n            fill=\"#fff\"\r\n            fillOpacity={0}\r\n            onPress={onPress}\r\n          />,\r\n          renderDotContent({ x: cx, y: cy, index: i })\r\n        );\r\n      });\r\n    });\r\n    return output;\r\n  };\r\n\r\n  renderShadow = config => {\r\n    if (this.props.bezier) {\r\n      return this.renderBezierShadow(config);\r\n    }\r\n\r\n    const { data, width, height, paddingRight, paddingTop } = config;\r\n    const datas = this.getDatas(data);\r\n    const baseHeight = this.calcBaseHeight(datas, height);\r\n    return config.data.map((dataset, index) => {\r\n      return (\r\n        <Polygon\r\n          key={index}\r\n          points={\r\n            dataset.data\r\n              .map((d, i) => {\r\n                const x =\r\n                  paddingRight +\r\n                  (i * (width - paddingRight)) / dataset.data.length;\r\n                const y =\r\n                  ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\r\n                  paddingTop;\r\n                return `${x},${y}`;\r\n              })\r\n              .join(\" \") +\r\n            ` ${paddingRight +\r\n              ((width - paddingRight) / dataset.data.length) *\r\n                (dataset.data.length - 1)},${(height / 4) * 3 +\r\n              paddingTop} ${paddingRight},${(height / 4) * 3 + paddingTop}`\r\n          }\r\n          fill=\"url(#fillShadowGradient)\"\r\n          strokeWidth={0}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderLine = config => {\r\n    if (this.props.bezier) {\r\n      return this.renderBezierLine(config);\r\n    }\r\n\r\n    const { width, height, paddingRight, paddingTop, data } = config;\r\n    const output = [];\r\n    const datas = this.getDatas(data);\r\n    const baseHeight = this.calcBaseHeight(datas, height);\r\n    data.forEach((dataset, index) => {\r\n      const points = dataset.data.map((d, i) => {\r\n        const x =\r\n          (i * (width - paddingRight)) / dataset.data.length + paddingRight;\r\n        const y =\r\n          ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\r\n          paddingTop;\r\n        return `${x},${y}`;\r\n      });\r\n\r\n      output.push(\r\n        <Polyline\r\n          key={index}\r\n          points={points.join(\" \")}\r\n          fill=\"none\"\r\n          stroke={this.getColor(dataset, 0.2)}\r\n          strokeWidth={this.getStrokeWidth(dataset)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return output;\r\n  };\r\n\r\n  getBezierLinePoints = (dataset, config) => {\r\n    const { width, height, paddingRight, paddingTop, data } = config;\r\n    if (dataset.data.length === 0) {\r\n      return \"M0,0\";\r\n    }\r\n\r\n    const datas = this.getDatas(data);\r\n    const x = i =>\r\n      Math.floor(\r\n        paddingRight + (i * (width - paddingRight)) / dataset.data.length\r\n      );\r\n    const baseHeight = this.calcBaseHeight(datas, height);\r\n    const y = i => {\r\n      const yHeight = this.calcHeight(dataset.data[i], datas, height);\r\n      return Math.floor(((baseHeight - yHeight) / 4) * 3 + paddingTop);\r\n    };\r\n\r\n    return [`M${x(0)},${y(0)}`]\r\n      .concat(\r\n        dataset.data.slice(0, -1).map((_, i) => {\r\n          const x_mid = (x(i) + x(i + 1)) / 2;\r\n          const y_mid = (y(i) + y(i + 1)) / 2;\r\n          const cp_x1 = (x_mid + x(i)) / 2;\r\n          const cp_x2 = (x_mid + x(i + 1)) / 2;\r\n          return (\r\n            `Q ${cp_x1}, ${y(i)}, ${x_mid}, ${y_mid}` +\r\n            ` Q ${cp_x2}, ${y(i + 1)}, ${x(i + 1)}, ${y(i + 1)}`\r\n          );\r\n        })\r\n      )\r\n      .join(\" \");\r\n  };\r\n\r\n  renderBezierLine = config => {\r\n    return config.data.map((dataset, index) => {\r\n      const result = this.getBezierLinePoints(dataset, config);\r\n      return (\r\n        <Path\r\n          key={index}\r\n          d={result}\r\n          fill=\"none\"\r\n          stroke={this.getColor(dataset, 0.2)}\r\n          strokeWidth={this.getStrokeWidth(dataset)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderBezierShadow = config => {\r\n    const { width, height, paddingRight, paddingTop, data } = config;\r\n    return data.map((dataset, index) => {\r\n      const d =\r\n        this.getBezierLinePoints(dataset, config) +\r\n        ` L${paddingRight +\r\n          ((width - paddingRight) / dataset.data.length) *\r\n            (dataset.data.length - 1)},${(height / 4) * 3 +\r\n          paddingTop} L${paddingRight},${(height / 4) * 3 + paddingTop} Z`;\r\n      return (\r\n        <Path\r\n          key={index}\r\n          d={d}\r\n          fill=\"url(#fillShadowGradient)\"\r\n          strokeWidth={0}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderLegend = (width, legendOffset) => {\r\n    const { legend, datasets } = this.props.data;\r\n    const baseLegendItemX = width / (legend.length + 1);\r\n\r\n    return legend.map((legendItem, i) => (\r\n      <G key={Math.random()}>\r\n        <LegendItem\r\n          index={i}\r\n          iconColor={this.getColor(datasets[i], 0.9)}\r\n          baseLegendItemX={baseLegendItemX}\r\n          legendText={legendItem}\r\n          labelProps={{ ...this.getPropsForLabels() }}\r\n          legendOffset={legendOffset}\r\n        />\r\n      </G>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      data,\r\n      withShadow = true,\r\n      withDots = true,\r\n      withInnerLines = true,\r\n      withOuterLines = true,\r\n      withHorizontalLabels = true,\r\n      withVerticalLabels = true,\r\n      style = {},\r\n      decorator,\r\n      onDataPointClick,\r\n      verticalLabelRotation = 0,\r\n      horizontalLabelRotation = 0,\r\n      formatYLabel = yLabel => yLabel,\r\n      formatXLabel = xLabel => xLabel,\r\n      segments\r\n    } = this.props;\r\n    const { labels = [] } = data;\r\n    const {\r\n      borderRadius = 0,\r\n      paddingTop = 16,\r\n      paddingRight = 64,\r\n      margin = 0,\r\n      marginRight = 0,\r\n      paddingBottom = 0\r\n    } = style;\r\n\r\n    const config = {\r\n      width,\r\n      height,\r\n      verticalLabelRotation,\r\n      horizontalLabelRotation\r\n    };\r\n\r\n    const datas = this.getDatas(data.datasets);\r\n\r\n    let count = Math.min(...datas) === Math.max(...datas) ? 1 : 4;\r\n    if (segments) {\r\n      count = segments;\r\n    }\r\n\r\n    const legendOffset = this.props.data.legend ? height * 0.15 : 0;\r\n    return (\r\n      <View style={style}>\r\n        <Svg\r\n          height={height + paddingBottom + legendOffset}\r\n          width={width - margin * 2 - marginRight}\r\n        >\r\n          <Rect\r\n            width=\"100%\"\r\n            height={height + legendOffset}\r\n            rx={borderRadius}\r\n            ry={borderRadius}\r\n            fill=\"url(#backgroundGradient)\"\r\n          />\r\n          {this.props.data.legend &&\r\n            this.renderLegend(config.width, legendOffset)}\r\n          <G x=\"0\" y={legendOffset}>\r\n            {this.renderDefs({\r\n              ...config,\r\n              ...this.props.chartConfig\r\n            })}\r\n            <G>\r\n              {withInnerLines\r\n                ? this.renderHorizontalLines({\r\n                    ...config,\r\n                    count: count,\r\n                    paddingTop,\r\n                    paddingRight\r\n                  })\r\n                : withOuterLines\r\n                ? this.renderHorizontalLine({\r\n                    ...config,\r\n                    paddingTop,\r\n                    paddingRight\r\n                  })\r\n                : null}\r\n            </G>\r\n            <G>\r\n              {withHorizontalLabels\r\n                ? this.renderHorizontalLabels({\r\n                    ...config,\r\n                    count: count,\r\n                    data: datas,\r\n                    paddingTop,\r\n                    paddingRight,\r\n                    formatYLabel,\r\n                    decimalPlaces: this.props.chartConfig.decimalPlaces\r\n                  })\r\n                : null}\r\n            </G>\r\n            <G>\r\n              {withInnerLines\r\n                ? this.renderVerticalLines({\r\n                    ...config,\r\n                    data: data.datasets[0].data,\r\n                    paddingTop,\r\n                    paddingRight\r\n                  })\r\n                : withOuterLines\r\n                ? this.renderVerticalLine({\r\n                    ...config,\r\n                    paddingTop,\r\n                    paddingRight\r\n                  })\r\n                : null}\r\n            </G>\r\n            <G>\r\n              {withVerticalLabels\r\n                ? this.renderVerticalLabels({\r\n                    ...config,\r\n                    labels,\r\n                    paddingRight,\r\n                    paddingTop,\r\n                    formatXLabel\r\n                  })\r\n                : null}\r\n            </G>\r\n            <G>\r\n              {this.renderLine({\r\n                ...config,\r\n                paddingRight,\r\n                paddingTop,\r\n                data: data.datasets\r\n              })}\r\n            </G>\r\n            <G>\r\n              {withShadow &&\r\n                this.renderShadow({\r\n                  ...config,\r\n                  data: data.datasets,\r\n                  paddingRight,\r\n                  paddingTop\r\n                })}\r\n            </G>\r\n            <G>\r\n              {withDots &&\r\n                this.renderDots({\r\n                  ...config,\r\n                  data: data.datasets,\r\n                  paddingTop,\r\n                  paddingRight,\r\n                  onDataPointClick\r\n                })}\r\n            </G>\r\n            <G>\r\n              {decorator &&\r\n                decorator({\r\n                  ...config,\r\n                  data: data.datasets,\r\n                  paddingTop,\r\n                  paddingRight\r\n                })}\r\n            </G>\r\n          </G>\r\n        </Svg>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}