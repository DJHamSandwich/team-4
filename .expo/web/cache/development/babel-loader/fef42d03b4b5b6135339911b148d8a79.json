{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\files\\\\app\\\\team-4\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport { normalizeText, color } from \"../helpers\";\nimport Text from \"../text/Text\";\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var theme = props.theme,\n      rest = _objectWithoutProperties(props, [\"theme\"]);\n\n  var Component = rest.Component,\n      buttons = rest.buttons,\n      _onPress = rest.onPress,\n      selectedIndex = rest.selectedIndex,\n      selectedIndexes = rest.selectedIndexes,\n      selectMultiple = rest.selectMultiple,\n      containerStyle = rest.containerStyle,\n      innerBorderStyle = rest.innerBorderStyle,\n      lastBorderStyle = rest.lastBorderStyle,\n      buttonStyle = rest.buttonStyle,\n      textStyle = rest.textStyle,\n      selectedTextStyle = rest.selectedTextStyle,\n      selectedButtonStyle = rest.selectedButtonStyle,\n      _rest$underlayColor = rest.underlayColor,\n      underlayColor = _rest$underlayColor === void 0 ? theme.colors.primary : _rest$underlayColor,\n      activeOpacity = rest.activeOpacity,\n      onHideUnderlay = rest.onHideUnderlay,\n      onShowUnderlay = rest.onShowUnderlay,\n      setOpacityTo = rest.setOpacityTo,\n      containerBorderRadius = rest.containerBorderRadius,\n      disabled = rest.disabled,\n      disabledStyle = rest.disabledStyle,\n      disabledTextStyle = rest.disabledTextStyle,\n      disabledSelectedStyle = rest.disabledSelectedStyle,\n      disabledSelectedTextStyle = rest.disabledSelectedTextStyle,\n      attributes = _objectWithoutProperties(rest, [\"Component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"lastBorderStyle\", \"buttonStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"containerBorderRadius\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\"]);\n\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }), buttons.map(function (button, i) {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n    return React.createElement(View, {\n      key: i,\n      style: StyleSheet.flatten([styles.button, i < buttons.length - 1 && {\n        borderRightWidth: i === 0 ? 0 : innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === 1 && {\n        borderLeftWidth: innerBorderWidth,\n        borderLeftColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === buttons.length - 1 && _objectSpread({}, lastBorderStyle, {\n        borderTopRightRadius: containerBorderRadius,\n        borderBottomRightRadius: containerBorderRadius\n      }), i === 0 && {\n        borderTopLeftRadius: containerBorderRadius,\n        borderBottomLeftRadius: containerBorderRadius\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      }\n    }, React.createElement(Component, {\n      testID: \"buttonGroupItem\",\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: isDisabled,\n      onPress: function onPress() {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(function (index) {\n              return index !== i;\n            }));\n          } else {\n            _onPress([].concat(_toConsumableArray(selectedIndexes), [i]));\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, button.element ? React.createElement(button.element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      }\n    }) : React.createElement(Text, {\n      testID: \"buttonGroupItemText\",\n      style: StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      }\n    }, button))));\n  }));\n};\n\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5,\n    marginTop: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  buttonText: function buttonText(theme) {\n    return _objectSpread({\n      fontSize: normalizeText(13),\n      color: theme.colors.grey2\n    }, Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500'\n      }\n    }));\n  },\n  disabled: {\n    backgroundColor: 'transparent'\n  },\n  disabledText: function disabledText(theme) {\n    return {\n      color: color(theme.colors.disabled).darken(0.3).toString()\n    };\n  },\n  disabledSelected: function disabledSelected(theme) {\n    return {\n      backgroundColor: theme.colors.disabled\n    };\n  }\n};\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  selectedTextStyle: NativeText.propTypes.style,\n  selectedButtonStyle: ViewPropTypes.style,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number\n  }),\n  lastBorderStyle: PropTypes.oneOfType([ViewPropTypes.style, NativeText.propTypes.style]),\n  buttonStyle: ViewPropTypes.style,\n  containerBorderRadius: PropTypes.number,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.number)]),\n  disabledStyle: ViewPropTypes.style,\n  disabledTextStyle: NativeText.propTypes.style,\n  disabledSelectedStyle: ViewPropTypes.style,\n  disabledSelectedTextStyle: NativeText.propTypes.style\n};\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  containerBorderRadius: 3,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: function onPress() {\n    return null;\n  }\n};\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');","map":{"version":3,"sources":["D:/files/app/team-4/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","normalizeText","color","Text","ButtonGroup","props","theme","rest","Component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","lastBorderStyle","buttonStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","containerBorderRadius","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","attributes","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","map","button","i","isSelected","includes","isDisabled","Array","isArray","length","borderRightWidth","borderRightColor","grey4","borderLeftWidth","borderLeftColor","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","filter","index","textContainer","backgroundColor","disabledSelected","element","buttonText","disabledText","flex","justifyContent","alignItems","marginLeft","marginRight","marginBottom","marginTop","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","android","default","fontWeight","darken","toString","propTypes","object","elementType","func","array","style","NativeText","string","number","arrayOf","shape","oneOfType","bool","defaultProps","TouchableNativeFeedback","TouchableOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  View,\r\n  Text as NativeText,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  Platform,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nimport { ViewPropTypes, withTheme } from '../config';\r\nimport { normalizeText, color } from '../helpers';\r\n\r\nimport Text from '../text/Text';\r\n\r\nconst ButtonGroup = props => {\r\n  const { theme, ...rest } = props;\r\n\r\n  const {\r\n    Component,\r\n    buttons,\r\n    onPress,\r\n    selectedIndex,\r\n    selectedIndexes,\r\n    selectMultiple,\r\n    containerStyle,\r\n    innerBorderStyle,\r\n    lastBorderStyle,\r\n    buttonStyle,\r\n    textStyle,\r\n    selectedTextStyle,\r\n    selectedButtonStyle,\r\n    underlayColor = theme.colors.primary,\r\n    activeOpacity,\r\n    onHideUnderlay,\r\n    onShowUnderlay,\r\n    setOpacityTo,\r\n    containerBorderRadius,\r\n    disabled,\r\n    disabledStyle,\r\n    disabledTextStyle,\r\n    disabledSelectedStyle,\r\n    disabledSelectedTextStyle,\r\n    ...attributes\r\n  } = rest;\r\n\r\n  let innerBorderWidth = 1;\r\n\r\n  if (\r\n    innerBorderStyle &&\r\n    Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')\r\n  ) {\r\n    innerBorderWidth = innerBorderStyle.width;\r\n  }\r\n\r\n  return (\r\n    <View\r\n      {...attributes}\r\n      style={StyleSheet.flatten([\r\n        styles.container,\r\n        containerStyle && containerStyle,\r\n      ])}\r\n    >\r\n      {buttons.map((button, i) => {\r\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\r\n        const isDisabled =\r\n          disabled === true ||\r\n          (Array.isArray(disabled) && disabled.includes(i));\r\n\r\n        return (\r\n          <View\r\n            key={i}\r\n            style={StyleSheet.flatten([\r\n              // FIXME: This is a workaround to the borderColor and borderRadius bug\r\n              // react-native ref: https://github.com/facebook/react-native/issues/8236\r\n              styles.button,\r\n              i < buttons.length - 1 && {\r\n                borderRightWidth: i === 0 ? 0 : innerBorderWidth,\r\n                borderRightColor:\r\n                  (innerBorderStyle && innerBorderStyle.color) ||\r\n                  theme.colors.grey4,\r\n              },\r\n              i === 1 && {\r\n                borderLeftWidth: innerBorderWidth,\r\n                borderLeftColor:\r\n                  (innerBorderStyle && innerBorderStyle.color) ||\r\n                  theme.colors.grey4,\r\n              },\r\n              i === buttons.length - 1 && {\r\n                ...lastBorderStyle,\r\n                borderTopRightRadius: containerBorderRadius,\r\n                borderBottomRightRadius: containerBorderRadius,\r\n              },\r\n              i === 0 && {\r\n                borderTopLeftRadius: containerBorderRadius,\r\n                borderBottomLeftRadius: containerBorderRadius,\r\n              },\r\n            ])}\r\n          >\r\n            <Component\r\n              testID=\"buttonGroupItem\"\r\n              activeOpacity={activeOpacity}\r\n              setOpacityTo={setOpacityTo}\r\n              onHideUnderlay={onHideUnderlay}\r\n              onShowUnderlay={onShowUnderlay}\r\n              underlayColor={underlayColor}\r\n              disabled={isDisabled}\r\n              onPress={() => {\r\n                if (selectMultiple) {\r\n                  if (selectedIndexes.includes(i)) {\r\n                    onPress(selectedIndexes.filter(index => index !== i));\r\n                  } else {\r\n                    onPress([...selectedIndexes, i]);\r\n                  }\r\n                } else {\r\n                  onPress(i);\r\n                }\r\n              }}\r\n              style={styles.button}\r\n            >\r\n              <View\r\n                style={StyleSheet.flatten([\r\n                  styles.textContainer,\r\n                  buttonStyle && buttonStyle,\r\n                  isSelected && {\r\n                    backgroundColor: theme.colors.primary,\r\n                  },\r\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\r\n                  isDisabled && styles.disabled,\r\n                  isDisabled && disabledStyle,\r\n                  isDisabled && isSelected && styles.disabledSelected(theme),\r\n                  isDisabled && isSelected && disabledSelectedStyle,\r\n                ])}\r\n              >\r\n                {button.element ? (\r\n                  <button.element />\r\n                ) : (\r\n                  <Text\r\n                    testID=\"buttonGroupItemText\"\r\n                    style={StyleSheet.flatten([\r\n                      styles.buttonText(theme),\r\n                      textStyle && textStyle,\r\n                      isSelected && { color: '#fff' },\r\n                      isSelected && selectedTextStyle,\r\n                      isDisabled && styles.disabledText(theme),\r\n                      isDisabled && disabledTextStyle,\r\n                      isDisabled && isSelected && disabledSelectedTextStyle,\r\n                    ])}\r\n                  >\r\n                    {button}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            </Component>\r\n          </View>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  button: {\r\n    flex: 1,\r\n  },\r\n  textContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    borderColor: '#e3e3e3',\r\n    borderWidth: 1,\r\n    flexDirection: 'row',\r\n    borderRadius: 3,\r\n    overflow: 'hidden',\r\n    backgroundColor: '#fff',\r\n    height: 40,\r\n  },\r\n  buttonText: theme => ({\r\n    fontSize: normalizeText(13),\r\n    color: theme.colors.grey2,\r\n    ...Platform.select({\r\n      android: {},\r\n      default: {\r\n        fontWeight: '500',\r\n      },\r\n    }),\r\n  }),\r\n  disabled: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  disabledText: theme => ({\r\n    color: color(theme.colors.disabled)\r\n      .darken(0.3)\r\n      .toString(),\r\n  }),\r\n  disabledSelected: theme => ({\r\n    backgroundColor: theme.colors.disabled,\r\n  }),\r\n};\r\n\r\nButtonGroup.propTypes = {\r\n  button: PropTypes.object,\r\n  Component: PropTypes.elementType,\r\n  onPress: PropTypes.func,\r\n  buttons: PropTypes.array,\r\n  containerStyle: ViewPropTypes.style,\r\n  textStyle: NativeText.propTypes.style,\r\n  selectedTextStyle: NativeText.propTypes.style,\r\n  selectedButtonStyle: ViewPropTypes.style,\r\n  underlayColor: PropTypes.string,\r\n  selectedIndex: PropTypes.number,\r\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\r\n  activeOpacity: PropTypes.number,\r\n  onHideUnderlay: PropTypes.func,\r\n  onShowUnderlay: PropTypes.func,\r\n  setOpacityTo: PropTypes.func,\r\n  innerBorderStyle: PropTypes.shape({\r\n    color: PropTypes.string,\r\n    width: PropTypes.number,\r\n  }),\r\n  lastBorderStyle: PropTypes.oneOfType([\r\n    ViewPropTypes.style,\r\n    NativeText.propTypes.style,\r\n  ]),\r\n  buttonStyle: ViewPropTypes.style,\r\n  containerBorderRadius: PropTypes.number,\r\n  selectMultiple: PropTypes.bool,\r\n  theme: PropTypes.object,\r\n  disabled: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.arrayOf(PropTypes.number),\r\n  ]),\r\n  disabledStyle: ViewPropTypes.style,\r\n  disabledTextStyle: NativeText.propTypes.style,\r\n  disabledSelectedStyle: ViewPropTypes.style,\r\n  disabledSelectedTextStyle: NativeText.propTypes.style,\r\n};\r\n\r\nButtonGroup.defaultProps = {\r\n  selectedIndex: null,\r\n  selectedIndexes: [],\r\n  selectMultiple: false,\r\n  containerBorderRadius: 3,\r\n  disabled: false,\r\n  Component: Platform.select({\r\n    android: TouchableNativeFeedback,\r\n    default: TouchableOpacity,\r\n  }),\r\n  onPress: () => null,\r\n};\r\n\r\nexport { ButtonGroup };\r\nexport default withTheme(ButtonGroup, 'ButtonGroup');\r\n"]},"metadata":{},"sourceType":"module"}