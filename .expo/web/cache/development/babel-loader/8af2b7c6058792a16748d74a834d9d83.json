{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\team-4\\\\node_modules\\\\react-native-elements\\\\src\\\\tile\\\\FeaturedTile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ViewPropTypes, BackgroundImage, withTheme } from \"../config\";\nimport { renderNode } from \"../helpers\";\nimport Text from \"../text/Text\";\nimport Icon from \"../icons/Icon\";\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return renderNode(Text, content, _objectSpread({}, defaultProps, {\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nvar FeaturedTile = function FeaturedTile(props) {\n  var title = props.title,\n      icon = props.icon,\n      caption = props.caption,\n      imageSrc = props.imageSrc,\n      containerStyle = props.containerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      overlayContainerStyle = props.overlayContainerStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      titleStyle = props.titleStyle,\n      captionStyle = props.captionStyle,\n      ImageComponent = props.ImageComponent,\n      imageProps = props.imageProps,\n      attributes = _objectWithoutProperties(props, [\"title\", \"icon\", \"caption\", \"imageSrc\", \"containerStyle\", \"imageContainerStyle\", \"overlayContainerStyle\", \"iconContainerStyle\", \"titleStyle\", \"captionStyle\", \"ImageComponent\", \"imageProps\"]);\n\n  var _props$width = props.width,\n      width = _props$width === void 0 ? Dimensions.get('window').width : _props$width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? width * 0.8 : _props$height;\n  var styles = StyleSheet.create({\n    container: {\n      width: width,\n      height: height\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: width,\n      height: height\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingTop: 45,\n      paddingBottom: 40,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    text: {\n      color: '#ffffff',\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 15,\n      textAlign: 'center'\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(TouchableOpacity, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }), React.createElement(ImageComponent, _extends({\n    resizeMode: \"cover\"\n  }, imageProps, {\n    source: imageSrc,\n    style: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlayContainer, overlayContainerStyle && overlayContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    }\n  }, icon && React.createElement(Icon, _extends({}, icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    }\n  }))), React.createElement(Text, {\n    testID: \"featuredTileTitle\",\n    h4: true,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    }\n  }, title), renderText(caption, {\n    style: captionStyle\n  }, styles.text))));\n};\n\nFeaturedTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  ImageComponent: PropTypes.elementType,\n  imageProps: PropTypes.object\n};\nFeaturedTile.defaultProps = {\n  ImageComponent: BackgroundImage,\n  imageProps: {}\n};\nexport { FeaturedTile };\nexport default withTheme(FeaturedTile, 'FeaturedTile');","map":{"version":3,"sources":["C:/Users/User/Desktop/team-4/node_modules/react-native-elements/src/tile/FeaturedTile.js"],"names":["React","PropTypes","ViewPropTypes","BackgroundImage","withTheme","renderNode","Text","Icon","renderText","content","defaultProps","style","StyleSheet","flatten","FeaturedTile","props","title","icon","caption","imageSrc","containerStyle","imageContainerStyle","overlayContainerStyle","iconContainerStyle","titleStyle","captionStyle","ImageComponent","imageProps","attributes","width","Dimensions","get","height","styles","create","container","imageContainer","alignItems","justifyContent","overlayContainer","flex","alignSelf","paddingLeft","paddingRight","paddingTop","paddingBottom","position","top","left","right","bottom","text","color","backgroundColor","marginBottom","textAlign","iconContainer","propTypes","string","object","node","Image","source","onPress","func","NativeText","number","elementType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TouchableOpacity,\r\n  Text as NativeText,\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nimport { ViewPropTypes, BackgroundImage, withTheme } from '../config';\r\nimport { renderNode } from '../helpers';\r\n\r\nimport Text from '../text/Text';\r\nimport Icon from '../icons/Icon';\r\n\r\nconst renderText = (content, defaultProps, style) =>\r\n  renderNode(Text, content, {\r\n    ...defaultProps,\r\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\r\n  });\r\n\r\nconst FeaturedTile = props => {\r\n  const {\r\n    title,\r\n    icon,\r\n    caption,\r\n    imageSrc,\r\n    containerStyle,\r\n    imageContainerStyle,\r\n    overlayContainerStyle,\r\n    iconContainerStyle,\r\n    titleStyle,\r\n    captionStyle,\r\n    ImageComponent,\r\n    imageProps,\r\n    ...attributes\r\n  } = props;\r\n\r\n  const {\r\n    width = Dimensions.get('window').width,\r\n    height = width * 0.8,\r\n  } = props;\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      width,\r\n      height,\r\n    },\r\n    imageContainer: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width,\r\n      height,\r\n    },\r\n    overlayContainer: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      alignSelf: 'stretch',\r\n      justifyContent: 'center',\r\n      paddingLeft: 25,\r\n      paddingRight: 25,\r\n      paddingTop: 45,\r\n      paddingBottom: 40,\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n    },\r\n    text: {\r\n      color: '#ffffff',\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      marginBottom: 15,\r\n      textAlign: 'center',\r\n    },\r\n    iconContainer: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      alignSelf: 'center',\r\n    },\r\n  });\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      {...attributes}\r\n      style={StyleSheet.flatten([\r\n        styles.container,\r\n        containerStyle && containerStyle,\r\n      ])}\r\n    >\r\n      <ImageComponent\r\n        resizeMode=\"cover\"\r\n        {...imageProps}\r\n        source={imageSrc}\r\n        style={StyleSheet.flatten([\r\n          styles.imageContainer,\r\n          imageContainerStyle && imageContainerStyle,\r\n        ])}\r\n      >\r\n        <View\r\n          style={StyleSheet.flatten([\r\n            styles.overlayContainer,\r\n            overlayContainerStyle && overlayContainerStyle,\r\n          ])}\r\n        >\r\n          <View\r\n            style={StyleSheet.flatten([\r\n              styles.iconContainer,\r\n              iconContainerStyle && iconContainerStyle,\r\n            ])}\r\n          >\r\n            {icon && <Icon {...icon} />}\r\n          </View>\r\n          <Text\r\n            testID=\"featuredTileTitle\"\r\n            h4\r\n            style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\r\n          >\r\n            {title}\r\n          </Text>\r\n          {renderText(caption, { style: captionStyle }, styles.text)}\r\n        </View>\r\n      </ImageComponent>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nFeaturedTile.propTypes = {\r\n  title: PropTypes.string,\r\n  icon: PropTypes.object,\r\n  caption: PropTypes.node,\r\n  imageSrc: Image.propTypes.source,\r\n  onPress: PropTypes.func,\r\n  containerStyle: ViewPropTypes.style,\r\n  iconContainerStyle: ViewPropTypes.style,\r\n  imageContainerStyle: ViewPropTypes.style,\r\n  overlayContainerStyle: ViewPropTypes.style,\r\n  titleStyle: NativeText.propTypes.style,\r\n  captionStyle: NativeText.propTypes.style,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  ImageComponent: PropTypes.elementType,\r\n  imageProps: PropTypes.object,\r\n};\r\n\r\nFeaturedTile.defaultProps = {\r\n  ImageComponent: BackgroundImage,\r\n  imageProps: {},\r\n};\r\n\r\nexport { FeaturedTile };\r\nexport default withTheme(FeaturedTile, 'FeaturedTile');\r\n"]},"metadata":{},"sourceType":"module"}