{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\team-4\\\\node_modules\\\\react-native-chart-kit\\\\src\\\\bar-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, Rect, G } from \"react-native-svg\";\nimport AbstractChart from \"./abstract-chart\";\nvar barWidth = 32;\n\nvar BarChart = function (_AbstractChart) {\n  _inherits(BarChart, _AbstractChart);\n\n  function BarChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BarChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getBarPercentage = function () {\n      var _this$props$chartConf = _this.props.chartConfig.barPercentage,\n          barPercentage = _this$props$chartConf === void 0 ? 1 : _this$props$chartConf;\n      return barPercentage;\n    };\n\n    _this.renderBars = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          barRadius = config.barRadius;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return React.createElement(Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4 * 3 + paddingTop,\n          rx: barRadius,\n          width: barWidth,\n          height: Math.abs(barHeight) / 4 * 3,\n          fill: \"url(#fillShadowGradient)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          }\n        });\n      });\n    };\n\n    _this.renderBarTops = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n\n      var baseHeight = _this.calcBaseHeight(data, height);\n\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n\n        var barWidth = 32 * _this.getBarPercentage();\n\n        return React.createElement(Rect, {\n          key: Math.random(),\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop,\n          width: barWidth,\n          height: 2,\n          fill: _this.props.chartConfig.color(0.6),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          data = _this$props.data,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          _this$props$withHoriz = _this$props.withHorizontalLabels,\n          withHorizontalLabels = _this$props$withHoriz === void 0 ? true : _this$props$withHoriz,\n          _this$props$withVerti = _this$props.withVerticalLabels,\n          withVerticalLabels = _this$props$withVerti === void 0 ? true : _this$props$withVerti,\n          _this$props$verticalL = _this$props.verticalLabelRotation,\n          verticalLabelRotation = _this$props$verticalL === void 0 ? 0 : _this$props$verticalL,\n          _this$props$horizonta = _this$props.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props$horizonta === void 0 ? 0 : _this$props$horizonta,\n          _this$props$withInner = _this$props.withInnerLines,\n          withInnerLines = _this$props$withInner === void 0 ? true : _this$props$withInner,\n          _this$props$showBarTo = _this$props.showBarTops,\n          showBarTops = _this$props$showBarTo === void 0 ? true : _this$props$showBarTo,\n          _this$props$segments = _this$props.segments,\n          segments = _this$props$segments === void 0 ? 4 : _this$props$segments;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation,\n        barRadius: this.props.chartConfig && this.props.chartConfig.barRadius || 0,\n        formatYLabel: this.props.chartConfig && this.props.chartConfig.formatYLabel || function (label) {\n          return label;\n        },\n        formatXLabel: this.props.chartConfig && this.props.chartConfig.formatXLabel || function (label) {\n          return label;\n        }\n      };\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, React.createElement(Svg, {\n        height: height,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, this.renderDefs(_objectSpread({}, config, {}, this.props.chartConfig)), React.createElement(Rect, {\n        width: \"100%\",\n        height: height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread({}, config, {\n        count: segments,\n        paddingTop: paddingTop\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread({}, config, {\n        count: segments,\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread({}, config, {\n        labels: data.labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        horizontalOffset: barWidth * this.getBarPercentage()\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, this.renderBars(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, showBarTops && this.renderBarTops(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })))));\n    }\n  }]);\n\n  return BarChart;\n}(AbstractChart);\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/User/Desktop/team-4/node_modules/react-native-chart-kit/src/bar-chart.js"],"names":["React","Svg","Rect","G","AbstractChart","barWidth","BarChart","getBarPercentage","props","chartConfig","barPercentage","renderBars","config","data","width","height","paddingTop","paddingRight","barRadius","baseHeight","calcBaseHeight","map","x","i","barHeight","calcHeight","Math","random","length","abs","renderBarTops","color","style","withHorizontalLabels","withVerticalLabels","verticalLabelRotation","horizontalLabelRotation","withInnerLines","showBarTops","segments","borderRadius","formatYLabel","label","formatXLabel","renderDefs","renderHorizontalLines","count","renderHorizontalLabels","datasets","renderVerticalLabels","labels","horizontalOffset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Svg, Rect, G } from \"react-native-svg\";\r\nimport AbstractChart from \"./abstract-chart\";\r\n\r\nconst barWidth = 32;\r\n\r\nclass BarChart extends AbstractChart {\r\n  getBarPercentage = () => {\r\n    const { barPercentage = 1 } = this.props.chartConfig;\r\n    return barPercentage;\r\n  };\r\n\r\n  renderBars = config => {\r\n    const { data, width, height, paddingTop, paddingRight, barRadius } = config;\r\n    const baseHeight = this.calcBaseHeight(data, height);\r\n    return data.map((x, i) => {\r\n      const barHeight = this.calcHeight(x, data, height);\r\n      const barWidth = 32 * this.getBarPercentage();\r\n      return (\r\n        <Rect\r\n          key={Math.random()}\r\n          x={\r\n            paddingRight +\r\n            (i * (width - paddingRight)) / data.length +\r\n            barWidth / 2\r\n          }\r\n          y={\r\n            ((barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4) * 3 +\r\n            paddingTop\r\n          }\r\n          rx={barRadius}\r\n          width={barWidth}\r\n          height={(Math.abs(barHeight) / 4) * 3}\r\n          fill=\"url(#fillShadowGradient)\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderBarTops = config => {\r\n    const { data, width, height, paddingTop, paddingRight } = config;\r\n    const baseHeight = this.calcBaseHeight(data, height);\r\n    return data.map((x, i) => {\r\n      const barHeight = this.calcHeight(x, data, height);\r\n      const barWidth = 32 * this.getBarPercentage();\r\n      return (\r\n        <Rect\r\n          key={Math.random()}\r\n          x={\r\n            paddingRight +\r\n            (i * (width - paddingRight)) / data.length +\r\n            barWidth / 2\r\n          }\r\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop}\r\n          width={barWidth}\r\n          height={2}\r\n          fill={this.props.chartConfig.color(0.6)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      data,\r\n      style = {},\r\n      withHorizontalLabels = true,\r\n      withVerticalLabels = true,\r\n      verticalLabelRotation = 0,\r\n      horizontalLabelRotation = 0,\r\n      withInnerLines = true,\r\n      showBarTops = true,\r\n      segments = 4\r\n    } = this.props;\r\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\r\n    const config = {\r\n      width,\r\n      height,\r\n      verticalLabelRotation,\r\n      horizontalLabelRotation,\r\n      barRadius: (this.props.chartConfig && this.props.chartConfig.barRadius) || 0,\r\n      formatYLabel: (this.props.chartConfig && this.props.chartConfig.formatYLabel) || function(label){return label},\r\n      formatXLabel: (this.props.chartConfig && this.props.chartConfig.formatXLabel) || function(label){return label},\r\n    };\r\n    return (\r\n      <View style={style}>\r\n        <Svg height={height} width={width}>\r\n          {this.renderDefs({\r\n            ...config,\r\n            ...this.props.chartConfig\r\n          })}\r\n          <Rect\r\n            width=\"100%\"\r\n            height={height}\r\n            rx={borderRadius}\r\n            ry={borderRadius}\r\n            fill=\"url(#backgroundGradient)\"\r\n          />\r\n          <G>\r\n            {withInnerLines\r\n              ? this.renderHorizontalLines({\r\n                  ...config,\r\n                  count: segments,\r\n                  paddingTop\r\n                })\r\n              : null}\r\n          </G>\r\n          <G>\r\n            {withHorizontalLabels\r\n              ? this.renderHorizontalLabels({\r\n                  ...config,\r\n                  count: segments,\r\n                  data: data.datasets[0].data,\r\n                  paddingTop,\r\n                  paddingRight\r\n                })\r\n              : null}\r\n          </G>\r\n          <G>\r\n            {withVerticalLabels\r\n              ? this.renderVerticalLabels({\r\n                  ...config,\r\n                  labels: data.labels,\r\n                  paddingRight,\r\n                  paddingTop,\r\n                  horizontalOffset: barWidth * this.getBarPercentage()\r\n                })\r\n              : null}\r\n          </G>\r\n          <G>\r\n            {this.renderBars({\r\n              ...config,\r\n              data: data.datasets[0].data,\r\n              paddingTop,\r\n              paddingRight\r\n            })}\r\n          </G>\r\n          <G>\r\n            {showBarTops && this.renderBarTops({\r\n              ...config,\r\n              data: data.datasets[0].data,\r\n              paddingTop,\r\n              paddingRight\r\n            })}\r\n          </G>\r\n        </Svg>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}